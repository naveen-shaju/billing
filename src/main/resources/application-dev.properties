spring.application.name=billing
server.port=9000
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:dcbapp;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS dcbapp;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Enable H2 console for debugging (optional)
spring.h2.console.path=/h2-console

paymentApi.service.url=http://localhost:7000



# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG

# Resilience4J Retry configuration
resilience4j.retry.instances.paymentRetry.maxAttempts=3
resilience4j.retry.instances.paymentRetry.waitDuration=500ms
resilience4j.retry.instances.paymentRetry.enableExponentialBackoff=true
resilience4j.retry.instances.paymentRetry.maxWaitDuration=2s

# Resilience4J Circuit Breaker configuration
resilience4j.circuitbreaker.instances.paymentCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.paymentCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.paymentCircuitBreaker.slidingWindowSize=2
resilience4j.circuitbreaker.instances.paymentCircuitBreaker.permittedNumberOfCallsInHalfOpenState=10
resilience4j.circuitbreaker.instances.paymentCircuitBreaker.waitDurationInOpenState=10000ms

management.endpoints.web.exposure.include=health,info,circuitbreakers

management.server.port=9000

# OAuth2 Client Configuration
spring.security.oauth2.client.registration.my-client-id.client-id=oidc-client
spring.security.oauth2.client.registration.my-client-id.client-secret={noop}098765432
spring.security.oauth2.client.registration.my-client-id.client-authentication-method=basic
spring.security.oauth2.client.registration.my-client-id.authorization-grant-type=authorization_code,refresh_token
spring.security.oauth2.client.registration.my-client-id.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/oidc-client
spring.security.oauth2.client.registration.my-client-id.post-logout-redirect-uri=http://127.0.0.1:8080/
spring.security.oauth2.client.registration.my-client-id.scope=openid,profile
spring.security.oauth2.client.provider.my-client-id.issuer-uri=http://127.0.0.1:8080
spring.security.oauth2.client.provider.my-client-id.authorization-uri=http://127.0.0.1:8080/oauth2/authorize
spring.security.oauth2.client.provider.my-client-id.token-uri=http://127.0.0.1:8080/oauth2/token
spring.security.oauth2.client.provider.my-client-id.jwk-set-uri=http://127.0.0.1:8080/.well-known/openid-configuration
spring.security.oauth2.client.provider.my-client-id.user-info-uri=http://127.0.0.1:8080/userinfo
